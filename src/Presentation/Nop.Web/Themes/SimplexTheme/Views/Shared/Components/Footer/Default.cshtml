@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
<div class="footer">
    <div class="footer-upper">
        <div class="container">
            <div class="row">
                <div class="column newsletter-wrapper col-sm-7 col-md-6">
                    @await Component.InvokeAsync("NewsletterBox")
                </div>
                <div class="column follow-us col-sm-5 col-md-6">
                    @await Component.InvokeAsync("SocialButtons")
                </div>
            </div>
        </div>
    </div>
    <div class="footer-middle">
        <div class="container">
            <div class="row">
                <div class="column my-account col-sm-4 col-md-4">
                    <div class="title">
                        <strong>@T("Footer.MyAccount")</strong>
                    </div>
                    <ul class="nav nav-list">
                        @if (Model.DisplayCustomerInfoFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerInfo")"><i class="fa fa-angle-double-right"></i>@T("Account.MyAccount")</a></li>
                        }
                        @if (Model.DisplayCustomerOrdersFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerOrders")"><i class="fa fa-angle-double-right"></i>Meus @T("Account.CustomerOrders")</a></li>
                        }
                        @if (Model.DisplayCustomerAddressesFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerAddresses")"><i class="fa fa-angle-double-right"></i>@T("Account.CustomerAddresses")</a></li>
                        }
                        @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ShoppingCart")"><i class="fa fa-angle-double-right"></i>@T("ShoppingCart")</a></li>
                        }
                        @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Wishlist")"><i class="fa fa-angle-double-right"></i>@T("Wishlist")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })"><i class="fa fa-angle-double-right"></i>@topic.Name</a></li>
                        }
                        @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CompareProducts")"><i class="fa fa-angle-double-right"></i>@T("Products.Compare.List")</a></li>
                        }
                        @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("RecentlyViewedProducts")"><i class="fa fa-angle-double-right"></i>@T("Products.RecentlyViewedProducts")</a></li>
                        }
                    </ul>
                </div>
                <div class="column information col-sm-4 col-md-4">
                    <div class="title">
                        <strong>@T("Footer.Information")</strong>
                    </div>
                    <ul class="nav nav-list">
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })"><i class="fa fa-angle-double-right"></i>@topic.Name</a></li>
                        }
                        @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ApplyVendorAccount")"><i class="fa fa-angle-double-right"></i>@T("Vendors.ApplyAccount")</a></li>
                        }
                    </ul>
                </div>
                <div class="column contact-wrapper col-sm-4 col-md-4">
                    <div class="title">
                        <a id="contact"></a>
                        <strong>Central de Atendimento</strong>
                    </div>
                    <ul class="nav nav-list">
                        @if (Model.DisplayContactUsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ContactUs")"><i class="fa fa-angle-double-right"></i>Formul&aacute;rio para contato</a></li>
                        }
                        <li class="tel-zap">
                            <a style="color: #333;" href="https://wa.me/5548991257076" target="_blank" rel="noopener">
                                <span class="telefone-n">
                                    <i class="fa fa-whatsapp" style="color: #333;"></i>
                                    <strong>WhatsApp</strong>:
                                </span>
                                <p>(48) 99125-7076</p>
                            </a>
                        </li>
                        <li class="tel-tel">
                            <a style="color: #333;" href="tel:(48) 99125-7076" target="_blank" rel="noopener">
                                <span class="telefone-n">
                                    <i class="fa fa-phone" style="color: #333;"></i>
                                    <strong>Telefone</strong>:
                                </span>
                                <p>(48) 99125-7076</p>
                            </a>
                        </li>
                        <li class="tel-mail">
                            <a id="mail-send-footer" style="color: #333;" href="#" target="_blank" rel="noopener">
                                <span class="email-n">
                                    <i class="fa fa-envelope" style="color: #333;"></i>
                                    <strong>E-mail:</strong>
                                </span>
                                <p>
                                    <span class="contact-mail" data-user="otatnoc" data-website="rb.moc.tfosdk"></span>
                                </p>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-lower">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 col-sm-4 col-md-4 footer-store-partner">
                    <a href="https://www.microsoft.com/pt-br/solution-providers/partnerdetails/kd-informatica-ltda_a85726c4-1321-4994-9c54-969fad51f773/3d724380-ea71-4b36-a1d9-8a92b7d065b0" target="_blank" rel="noopener">
                        <div class="partner-logo">
                        </div>
                    </a>
                </div>
                <div class="col-xs-12 col-sm-4 col-md-4 footer-store-partner2">
                    <a href="https://www.microsoft.com/pt-br/solution-providers/partnerdetails/kd-informatica-ltda_a85726c4-1321-4994-9c54-969fad51f773/3d724380-ea71-4b36-a1d9-8a92b7d065b0" target="_blank" rel="noopener">
                        <div class="partner-logo-center">
                        </div>
                    </a>
                </div>
                <div class="col-xs-12 col-sm-4 col-md-4 footer-store-theme">
                    <div class="footer-disclaimer">
                        @T("Content.CopyrightNotice", DateTime.Now.Year.ToString(), Model.StoreName)<br/>CNPJ: 10.554.873/0001-08
                    </div>
                    @await Component.InvokeAsync("StoreThemeSelector")
                </div>
                <div class="col-xs-12 col-sm-4 col-md-4 payment-method">
                    <a href="payment-info" target="_self">
                        <div class="payment-method-1">

                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
</div>



